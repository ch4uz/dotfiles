ctrl + alt + cmd - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# alt - return : /Applications/iTerm.app/Contents/MacOS/iTerm2

# focus window
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# move managed window
shift + alt - h : yabai -m window --warp west
shift + alt - j : yabai -m window --warp south
shift + alt - k : yabai -m window --warp north
shift + alt - l : yabai -m window --warp east

# fast focus desktop
# enabled in Sys Pref > Keyboard > Shortcuts > Mission Control > Switch To Desktop X

# send window to desktop
# shift + cmd - z : yabai -m window --space next; yabai -m space --focus next
shift + alt - 1 : yabai -m window --space  1 && sketchybar --trigger windows_on_spaces;
shift + alt - 2 : yabai -m window --space  2 && sketchybar --trigger windows_on_spaces;
shift + alt - 3 : yabai -m window --space  3 && sketchybar --trigger windows_on_spaces;
shift + alt - 4 : yabai -m window --space  4 && sketchybar --trigger windows_on_spaces;
shift + alt - 5 : yabai -m window --space  5 && sketchybar --trigger windows_on_spaces;
shift + alt - 6 : yabai -m window --space  6 && sketchybar --trigger windows_on_spaces;
shift + alt - 7 : yabai -m window --space  7 && sketchybar --trigger windows_on_spaces;
shift + alt - 8 : yabai -m window --space  8 && sketchybar --trigger windows_on_spaces;
shift + alt - 9 : yabai -m window --space  9 && sketchybar --trigger windows_on_spaces;


shift + alt - q : yabai -m window --space  4 && sketchybar --trigger windows_on_spaces;
shift + alt - w : yabai -m window --space  5 && sketchybar --trigger windows_on_spaces;
shift + alt - e : yabai -m window --space  6 && sketchybar --trigger windows_on_spaces;


# moves focus between spaces
alt - 1 : yabai -m space --focus 1
alt - 2 : yabai -m space --focus 2
alt - 3 : yabai -m space --focus 3
alt - 4 : yabai -m space --focus 4
alt - 5 : yabai -m space --focus 5
alt - 6 : yabai -m space --focus 6
alt - 7 : yabai -m space --focus 7
alt - 8 : yabai -m space --focus 8
alt - 9 : yabai -m space --focus 9
alt - 0  : yabai -m space --focus 10

alt - q : yabai -m space --focus 4
alt - w : yabai -m space --focus 5
alt - e : yabai -m space --focus 6
alt - r : yabai -m space --focus 7

# rotate tree
alt - r : yabai -m space --rotate 270

# focus monitor
alt - 0x2B : yabai -m display --focus prev
alt - 0x29 : yabai -m display --focus next
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
shift + alt - 0x2B : yabai -m window --display prev; yabai -m display --focus prev
shift + alt - 0x29 : yabai -m window --display next; yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1

# toggle window zoom
# alt - d : yabai -m window --toggle zoom-parent
alt - f : yabai -m window --toggle zoom-fullscreen; sketchybar --trigger window_focus

# float / unfloat window and center on screen
alt - d : yabai -m window --toggle float; sketchybar --trigger window_focus

# increase window size
ctrl + alt - h : yabai -m window --resize left:-40:0
ctrl + alt - j : yabai -m window --resize bottom:0:40
ctrl + alt - k : yabai -m window --resize bottom:0:-40
ctrl + alt - l : yabai -m window --resize right:40:0

# change window ratio
# alt - o: yabai -m window --ratio abs:0.5
# alt - m: yabai -m window --ratio abs:0.75

# close window
# alt - x : yabai -m window --close; sketchybar --trigger window_focus

# create space
alt - n : yabai -m space --create && yabai -m space --focus last

# destroy space
alt - x : yabai -m space --destroy "$(yabai -m query --spaces --display | jq -r 'map(select(."has-focus" == true))[0].index')"


alt - i : yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre 'add | map(select(."is-minimized"==false)) | sort_by(.display, .frame.y, .frame.x, .id) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $has_index > 0 then nth($has_index - 1).id else nth($array_length - 1).id end' \
  | xargs -I{} yabai -m window --focus {}

alt - o : yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre 'add | map(select(."is-minimized"==false)) | sort_by(.display, .frame.y, .frame.x, .id) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $array_length - 1 > $has_index then nth($has_index + 1).id else nth(0).id end' \
  | xargs -I{} yabai -m window --focus {}

# Add the active window  to the window or stack to the {direction}
# Note that this only works when the active window does *not* already belong to a stack

# ctrl + alt - h : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window west --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)
# ctrl + alt - j : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window south --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)
# ctrl + alt - k : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window north --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)
# ctrl + alt - l : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)

# applications

# alt - e : emacsclient -c -e  "(select-frame-set-input-focus (selected-frame))" &
# alt - b : open -a "Brave Browser" -n
alt - return : open -a "kitty" -n
